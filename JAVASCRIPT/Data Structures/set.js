//______________________________________________________________Introduction________________________________________________________________
/*
Set হলো JavaScript-এর একটি বিল্ট-ইন অবজেক্ট যা ইউনিক ভ্যালুগুলোর একটি কালেকশন ধরে রাখে। এর মানে, Set-এ কোন ডুপ্লিকেট ভ্যালু থাকবে না। 
এটি একটি Array-এর মতো কাজ করে তবে কিছু গুরুত্বপূর্ণ পার্থক্য রয়েছে।
*/




//____________________________________________________________Making Set()______________________________________________________________

// Set তৈরি করতে new Set() কনস্ট্রাক্টর ব্যবহার করা হয়। এটি ফাঁকা Set তৈরি করতে পারে অথবা একটি ইটারেবল (যেমন, Array) থেকে মান গ্রহণ করতে পারে।
/*
const mySet = new Set();

const numberSet = new Set([1, 2, 3, 4, 5]);
console.log(numberSet); // Output: Set { 1, 2, 3, 4, 5 }
*/




//__________________________________________________________Adding value____________________________________________________________________

// Set-এ নতুন মান যোগ করতে .add() মেথড ব্যবহার করা হয়। তবে, যেহেতু Set ডুপ্লিকেট মান রাখে না, তাই যদি একই মান বারবার যোগ করতে চান, তবে তা একবারই সংরক্ষিত হবে।

/*
const letters = new Set();
letters.add('a');
letters.add('b');
letters.add('a'); // ডুপ্লিকেট, তাই যুক্ত হবে না
console.log(letters); // Output: Set { 'a', 'b' }
*/




//__________________________________________________________Finding size__________________________________________________________________
/*
const numbers = new Set([1, 2, 3, 4]);
console.log(numbers.size); // Output: 4
*/





//__________________________________________________________Deleteting value____________________________________________________________
/*
const fruits = new Set(['apple', 'banana', 'orange']);
fruits.delete('banana');
console.log(fruits); // Output: Set { 'apple', 'orange' }
*/




//__________________________________________________________Clearing value______________________________________________________________
/*
const mySet = new Set([1, 2, 3]);
mySet.clear();
console.log(mySet); // Output: Set {}
*/





//____________________________________________________________Checking value______________________________________________________________
/*
const letters = new Set(['a', 'b', 'c']);
console.log(letters.has('a')); // Output: true
console.log(letters.has('z')); // Output: false
*/





//_______________________________________________________________Loop in Set_____________________________________________________________
/*
const numbers = new Set([1, 2, 3]);

// for...of লুপ ব্যবহার করে
for (let num of numbers) {
  console.log(num);
}

// forEach ব্যবহার করে
numbers.forEach((num) => {
  console.log(num);
});                                              // output: 1 2 3
*/







//____________________________________________________________Array vs Set__________________________________________________________

/*
বৈশিষ্ট্য	                                                             Set	                                                 Array
ডুপ্লিকেট মান	                                                     রাখতে পারে না	                                             রাখতে পারে
মেথড	                                                .add(), .delete(), .has(), .clear()	               .push(), .pop(), .shift(), .unshift()
আকার জানার উপায়	                                                 .size	                                                 .length
*/






//_____________________________________________________________Use of Set____________________________________________________________
/*
Set মূলত ব্যবহার করা হয় যখন আপনি একটি ইউনিক আইটেমের কালেকশন রাখতে চান, যেমন:

1. ইউনিক ইউজার আইডি সংরক্ষণ করা
2. একাধিক ডুপ্লিকেট ইলিমেন্ট ফিল্টার করা
3. ডাটা ম্যানিপুলেশন করতে
*/


const ids = new Set([101, 102, 103, 101, 104]);
console.log(ids); // Output: Set { 101, 102, 103, 104 }